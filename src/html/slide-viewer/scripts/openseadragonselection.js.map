{"version":3,"sources":["selection.js","selectionoverlay.js","selectionrect.js"],"names":["$","onOutsideDrag","e","this","isSelecting","viewer","setMouseNavEnabled","delta","viewport","deltaPointsFromPixels","end","pointFromPixel","position","start","Point","x","y","rect","oldRect","restrictToImage","clone","rectDone","allowRotation","angle1","getAngleFromCenter","angle2","rotation","Math","PI","outerTracker","setTracking","startRotated","getPrerotatedRect","rotatedStartPoint","startRotatedHeight","useConstraint","width","height","constraintWidth","constraintHeight","bounds","world","getHomeBounds","fitsIn","Rect","pointIsInImage","restrictVector","SelectionRect","draw","onOutsideDragEnd","abs","onClick","restrictInputBox","box","maxX","maxY","rectTop","parseInt","style","top","rectLeft","left","rectWidth","boxWidth","boxHeight","marginTop","marginLeft","onInsideDrag","addClass","element","onInsideDragEnd","removeClass","onBorderDrag","border","center","getDegreeRotation","rotate","getCenter","newCenter","target","minus","onBorderDragEnd","onKeyPress","key","keyCode","charCode","confirm","String","fromCharCode","keyboardShortcut","toggleState","dist","distanceTo","angle","atan2","heightModDelta","self","point","prop","version","major","Error","Viewer","prototype","selection","options","selectionInstance","Selection","extend","buttonActiveImg","toggleButton","showSelectionControl","showConfirmDenyButtons","styleConfirmDenyButtons","returnPixelCoordinates","onSelection","onOpen","inputEvent","prefixUrl","navImages","REST","GROUP","HOVER","DOWN","selectionConfirm","selectionCancel","handleStyle","margin","background","cornersStyle","onCancel","showButton","transition","makeNeutralElement","className","borders","handle","corners","i","MouseTracker","dragHandler","bind","dragEndHandler","appendChild","setTimeout","right","bottom","inputBox","id","d1","document","createElement","t","createTextNode","setAttribute","addEventListener","innerTracker","keyHandler","focus","keydown","d2","f","rows","$this","btnGroup","append","config","configBtn","close","innerHTML","onclick","cancel","overlay","SelectionOverlay","clickTimeThreshold","clickDistThreshold","delegate","clickHandler","canvas","startDisabled","addEvent","container","prefix","useGroup","buttons","anyButton","onFocusHandler","onFocus","onBlurHandler","onBlur","Button","getElement","tooltip","getString","srcRest","srcGroup","srcHover","srcDown","onRelease","push","imgDown","cloneNode","confirmButton","classList","add","display","cancelButton","transform","addHandler","ControlDock","setState","enabled","undraw","visibility","raiseEvent","setAllowRotation","enable","disable","update","normalize","drawHTML","drawer","children","getContainerSize","jQuery","animate","opacity","destroy","css","result","real","viewportToImageRectangle","fromRect","round","OpenSeadragon","location","Overlay","apply","arguments","isPlainObject","Object","create","replace","equals","other","toString","swapWidthHeight","swapped","diff","fixed","area","getTopLeft","getTopRight","getBottomRight","getBottomLeft","areaEnd","reduceRotation","reduced"],"mappings":"CAOA,SAAAA,GACA,YA+dA,SAAAC,GAAAC,GAEA,GAAAC,KAAAC,YAAA,CACAD,KAAAE,OAAAC,oBAAA,EACA,IAAAC,GAAAJ,KAAAE,OAAAG,SAAAC,sBAAAP,EAAAK,OAAA,GACAG,EAAAP,KAAAE,OAAAG,SAAAG,eAAAT,EAAAU,UAAA,GACAC,EAAA,GAAAb,GAAAc,MAAAJ,EAAAK,EAAAR,EAAAQ,EAAAL,EAAAM,EAAAT,EAAAS,EACA,IAAAb,KAAAc,KAkBA,CAEA,GAAAC,EAIA,IAHAf,KAAAgB,kBACAD,EAAAf,KAAAc,KAAAG,SAEAjB,KAAAkB,SAEA,GAAAlB,KAAAmB,cAAA,CACA,GAAAC,GAAApB,KAAAc,KAAAO,mBAAAX,GACAY,EAAAtB,KAAAc,KAAAO,mBAAAd,EACAP,MAAAc,KAAAS,UAAAvB,KAAAc,KAAAS,SAAAH,EAAAE,GAAAE,KAAAC,OAEAzB,MAAA0B,aAAAC,aAAA,OAGA3B,MAAA4B,aACA5B,KAAAc,KAAAe,EAAA7B,KAAA8B,kBAAAvB,EAAAP,KAAA+B,oBAEA/B,KAAAgC,eAKAhC,KAAAc,KAAAmB,OAAA7B,EAAAQ,EACAZ,KAAAc,KAAAoB,OAAAlC,KAAAc,KAAAmB,MAAAjC,KAAAmC,gBAAAnC,KAAAoC,mBALApC,KAAAc,KAAAmB,OAAA7B,EAAAQ,EACAZ,KAAAc,KAAAoB,QAAA9B,EAAAS,EAQA,IAAAwB,GAAArC,KAAAE,OAAAoC,MAAAC,eACAvC,MAAAgB,kBAAAhB,KAAAc,KAAA0B,OAAA,GAAA3C,GAAA4C,KAAA,EAAA,EAAAJ,EAAAJ,MAAAI,EAAAH,WACAlC,KAAAc,KAAAC,OAjDA,CACA,GAAAf,KAAAgB,gBAAA,CACA,IAAA0B,EAAA1C,KAAAU,GACA,MAEAiC,GAAAvC,EAAAG,GAEAP,KAAA4B,cACA5B,KAAA8B,kBAAApB,EACAV,KAAAc,KAAAe,EAAAnB,EAAAH,EAAAP,KAAA+B,qBAEA/B,KAAAgC,cAGAhC,KAAAc,KAAA,GAAAjB,GAAA+C,cAAAlC,EAAAE,EAAAF,EAAAG,EAAAT,EAAAQ,EAAAR,EAAAS,GAFAb,KAAAc,KAAA,GAAAjB,GAAA+C,cAAAlC,EAAAE,EAAAF,EAAAG,EAAAT,EAAAQ,EAAAR,EAAAS,GAKAb,KAAAkB,UAAA,EAmCAlB,KAAA6C,QAIA,QAAAC,KAIA9C,KAAAc,OACAd,KAAAc,KAAAmB,MAAA,IACAjC,KAAAc,KAAAF,GAAAZ,KAAAc,KAAAmB,MACAjC,KAAAc,KAAAmB,MAAAT,KAAAuB,IAAA/C,KAAAc,KAAAmB,QAEAjC,KAAAc,KAAAoB,OAAA,IACAlC,KAAAc,KAAAD,GAAAb,KAAAc,KAAAoB,OACAlC,KAAAc,KAAAoB,OAAAV,KAAAuB,IAAA/C,KAAAc,KAAAoB,UAKAlC,KAAAE,OAAAC,oBAAA,GACAH,KAAAkB,UAAA,EAIA,QAAA8B,MAIA,QAAAC,GAAAnC,EAAAoC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,SAAAxC,EAAAyC,MAAAC,KACAC,EAAAH,SAAAxC,EAAAyC,MAAAG,MACAC,EAAAL,SAAAxC,EAAAyC,MAAAtB,OAKA2B,GAJAN,SAAAxC,EAAAyC,MAAArB,QAIAoB,SAAAJ,EAAAK,MAAAtB,QACA4B,EAAAP,SAAAJ,EAAAK,MAAArB,OAKAmB,GAAA,EACAH,EAAAK,MAAAO,WAAAT,EAAA,KACAA,EAAAQ,GAAAT,IAEAF,EAAAK,MAAAO,UAAAV,GAAAC,EAAAQ,GAAA,MAGAJ,EAAAE,EAAAC,EAAA,IAAAT,EAGAD,EAAAK,MAAAQ,YAAAH,EAAA,GAAA,KAEAV,EAAAK,MAAAQ,WAAA,oBAOA,QAAAC,GAAAjE,GACAF,EAAAoE,SAAAjE,KAAAkE,QAAA,WACA,IAAA9D,GAAAJ,KAAAE,OAAAG,SAAAC,sBAAAP,EAAAK,OAAA,EACAJ,MAAAc,KAAAF,GAAAR,EAAAQ,EACAZ,KAAAc,KAAAD,GAAAT,EAAAS,CACA,IAAAwB,GAAArC,KAAAE,OAAAoC,MAAAC,eACAvC,MAAAgB,kBAAAhB,KAAAc,KAAA0B,OAAA,GAAA3C,GAAA4C,KAAA,EAAA,EAAAJ,EAAAJ,MAAAI,EAAAH,WACAlC,KAAAc,KAAAF,GAAAR,EAAAQ,EACAZ,KAAAc,KAAAD,GAAAT,EAAAS,GAIAb,KAAA6C,OAKA,QAAAsB,KACAtE,EAAAuE,YAAApE,KAAAkE,QAAA,YAGA,QAAAG,GAAAC,EAAAvE,GAEA,GAEAwE,GAFAnE,EAAAL,EAAAK,MACAmB,EAAAvB,KAAAc,KAAA0D,oBAEAzD,EAAAf,KAAAgB,gBAAAhB,KAAAc,KAAAG,QAAA,IAOA,QANA,IAAAM,IAEAnB,EAAAA,EAAAqE,UAAAlD,EAAA,GAAA1B,GAAAc,MAAA,EAAA,IACA4D,EAAAvE,KAAAc,KAAA4D,aAEAtE,EAAAJ,KAAAE,OAAAG,SAAAC,sBAAAF,GAAA,GACAkE,GACA,IAAA,GACA,GAAAtE,KAAAgC,cAKA,CACAhC,KAAAc,KAAAD,GAAAT,EAAAS,EACAb,KAAAc,KAAAoB,QAAA9B,EAAAS,CAEA,IAAAN,GAAAP,KAAAc,KAAAF,EAAAZ,KAAAc,KAAAmB,KACAjC,MAAAc,KAAAmB,MAAAjC,KAAAc,KAAAoB,OAAAlC,KAAAoC,iBAAApC,KAAAmC,gBACAnC,KAAAc,KAAAF,EAAAL,EAAAP,KAAAc,KAAAmB,KACA,OAXAjC,KAAAc,KAAAD,GAAAT,EAAAS,EACAb,KAAAc,KAAAoB,QAAA9B,EAAAS,CACA,MAWA,KAAA,GACA,GAAAb,KAAAgC,cAIA,CACAhC,KAAAc,KAAAmB,OAAA7B,EAAAQ,EAEAZ,KAAAc,KAAAoB,OAAAlC,KAAAc,KAAAmB,MAAAjC,KAAAmC,gBAAAnC,KAAAoC,gBACA,OAPApC,KAAAc,KAAAmB,OAAA7B,EAAAQ,CACA,MAQA,KAAA,GACA,GAAAZ,KAAAgC,cAIA,CACAhC,KAAAc,KAAAoB,QAAA9B,EAAAS,EACAb,KAAAc,KAAAmB,MAAAjC,KAAAc,KAAAoB,OAAAlC,KAAAoC,iBAAApC,KAAAmC,eACA,OANAnC,KAAAc,KAAAoB,QAAA9B,EAAAS,CACA,MAOA,KAAA,GACA,GAAAb,KAAAgC,cAKA,CACAhC,KAAAc,KAAAF,GAAAR,EAAAQ,EACAZ,KAAAc,KAAAmB,OAAA7B,EAAAQ,CAEA,IAAAL,GAAAP,KAAAc,KAAAD,EAAAb,KAAAc,KAAAoB,MACAlC,MAAAc,KAAAoB,OAAAlC,KAAAc,KAAAmB,MAAAjC,KAAAmC,gBAAAnC,KAAAoC,iBACApC,KAAAc,KAAAD,EAAAN,EAAAP,KAAAc,KAAAoB,MACA,OAXAlC,KAAAc,KAAAF,GAAAR,EAAAQ,EACAZ,KAAAc,KAAAmB,OAAA7B,EAAAQ,CACA,MAWA,KAAA,GACA,GAAAZ,KAAAgC,cAMA,CACAhC,KAAAc,KAAAD,GAAAT,EAAAS,EACAb,KAAAc,KAAAoB,QAAA9B,EAAAS,CAEA,IAAAN,GAAAP,KAAAc,KAAAF,EAAAZ,KAAAc,KAAAmB,KACAjC,MAAAc,KAAAmB,MAAAjC,KAAAc,KAAAoB,OAAAlC,KAAAoC,iBAAApC,KAAAmC,gBACAnC,KAAAc,KAAAF,EAAAL,EAAAP,KAAAc,KAAAmB,KACA,OAZAjC,KAAAc,KAAAD,GAAAT,EAAAS,EACAb,KAAAc,KAAAoB,QAAA9B,EAAAS,EACAb,KAAAc,KAAAF,GAAAR,EAAAQ,EACAZ,KAAAc,KAAAmB,OAAA7B,EAAAQ,CACA,MAUA,KAAA,KACA,GAAAZ,KAAAgC,cAKA,CACAhC,KAAAc,KAAAD,GAAAT,EAAAS,EACAb,KAAAc,KAAAoB,QAAA9B,EAAAS,EAEAb,KAAAc,KAAAmB,MAAAjC,KAAAc,KAAAoB,OAAAlC,KAAAoC,iBAAApC,KAAAmC,eAEA,OAVAnC,KAAAc,KAAAD,GAAAT,EAAAS,EACAb,KAAAc,KAAAoB,QAAA9B,EAAAS,EACAb,KAAAc,KAAAmB,OAAA7B,EAAAQ,CACA,MASA,KAAA,KACA,GAAAZ,KAAAgC,cAIA,CAEAhC,KAAAc,KAAAoB,QAAA9B,EAAAS,EACAb,KAAAc,KAAAmB,MAAAjC,KAAAc,KAAAoB,OAAAlC,KAAAoC,iBAAApC,KAAAmC,eAEA,OARAnC,KAAAc,KAAAmB,OAAA7B,EAAAQ,EACAZ,KAAAc,KAAAoB,QAAA9B,EAAAS,CACA,MAQA,KAAA,KACA,GAAAb,KAAAgC,cAKA,CACAhC,KAAAc,KAAAoB,QAAA9B,EAAAS,CAEA,IAAAN,GAAAP,KAAAc,KAAAF,EAAAZ,KAAAc,KAAAmB,KACAjC,MAAAc,KAAAmB,MAAAjC,KAAAc,KAAAoB,OAAAlC,KAAAoC,iBAAApC,KAAAmC,gBACAnC,KAAAc,KAAAF,EAAAL,EAAAP,KAAAc,KAAAmB,KACA,OAVAjC,KAAAc,KAAAoB,QAAA9B,EAAAS,EACAb,KAAAc,KAAAF,GAAAR,EAAAQ,EACAZ,KAAAc,KAAAmB,OAAA7B,EAAAQ,EAWA,GAAA,IAAAW,EAAA,CAEA,GAAAoD,GAAA3E,KAAAc,KAAA4D,YAEAE,EAAAD,EAAAF,OAAAlD,EAAAgD,EAEAnE,GAAAwE,EAAAC,MAAAF,GACA3E,KAAAc,KAAAF,GAAAR,EAAAQ,EACAZ,KAAAc,KAAAD,GAAAT,EAAAS,EAEA,GAAAwB,GAAArC,KAAAE,OAAAoC,MAAAC,eACAvC,MAAAgB,kBAAAhB,KAAAc,KAAA0B,OAAA,GAAA3C,GAAA4C,KAAA,EAAA,EAAAJ,EAAAJ,MAAAI,EAAAH,WACAlC,KAAAc,KAAAC,GAEAf,KAAA6C,OAKA,QAAAiC,KACA9E,KAAAc,KAAAmB,MAAA,IACAjC,KAAAc,KAAAF,GAAAZ,KAAAc,KAAAmB,MACAjC,KAAAc,KAAAmB,MAAAT,KAAAuB,IAAA/C,KAAAc,KAAAmB,QAEAjC,KAAAc,KAAAoB,OAAA,IACAlC,KAAAc,KAAAD,GAAAb,KAAAc,KAAAoB,OACAlC,KAAAc,KAAAoB,OAAAV,KAAAuB,IAAA/C,KAAAc,KAAAoB,SAIA,QAAA6C,GAAAhF,GACA,GAAAiF,GAAAjF,EAAAkF,QAAAlF,EAAAkF,QAAAlF,EAAAmF,QACA,MAAAF,EACAhF,KAAAmF,UACAC,OAAAC,aAAAL,KAAAhF,KAAAsF,kBACAtF,KAAAuF,cAIA,QAAA1D,GAAAnB,EAAAH,EAAA2B,GACA,GAAAxB,EAAAE,EAAAL,EAAAK,EAAA,CAEA,GAAAA,GAAAF,CACAA,GAAAH,EACAA,EAAAK,EAEA,GAAAR,GAAAG,EAAAsE,MAAAnE,GACA8E,EAAA9E,EAAA+E,WAAAlF,GACAmF,KAAAlE,KAAAmE,MAAAvF,EAAAQ,EAAAR,EAAAS,GAAAW,KAAAC,GAAA,EACA8C,EAAA,GAAA1E,GAAAc,MACAP,EAAAQ,EAAA,EAAAF,EAAAE,EACAR,EAAAS,EAAA,EAAAH,EAAAG,GAEAC,EAAA,GAAAjB,GAAA+C,cACA2B,EAAA3D,EAAA4E,EAAA,EACAjB,EAAA1D,EAAAqB,EAAA,EACAsD,EACAtD,EACAwD,GAEAE,EAAA,GAAA/F,GAAAc,MAAA,EAAAuB,EAIA,OAHA0D,GAAAA,EAAAnB,OAAA3D,EAAA0D,oBAAA,GAAA3E,GAAAc,MAAA,EAAA,IACAG,EAAAF,GAAAgF,EAAAhF,EAAA,EACAE,EAAAD,GAAA+E,EAAA/E,EAAA,EACAC,EAGA,QAAA4B,GAAAmD,EAAAC,GACA,GAAAzD,GAAAwD,EAAA3F,OAAAoC,MAAAC,eACA,OAAAuD,GAAAlF,GAAA,GAAAkF,EAAAlF,GAAAyB,EAAAJ,OAAA6D,EAAAjF,GAAA,GAAAiF,EAAAjF,GAAAwB,EAAAH,OAGA,QAAAS,GAAAvC,EAAAG,GACA,GAAAG,EACA,KAAA,GAAAqF,MAAAnF,EAAA,EAAAC,EAAA,GACAH,EAAAH,EAAAwF,GAAA3F,EAAA2F,GACArF,EAAA,GAAAA,EAAA,IACAH,EAAAwF,GAAA,GACA3F,EAAA2F,IAAAxF,EAAAwF,GAAA,EACAxF,EAAAwF,GAAA,GACAxF,EAAAwF,GAAA,IACA3F,EAAA2F,IAAAxF,EAAAwF,GACAxF,EAAAwF,GAAA,IAtzBA,IAAAlG,EAAAmG,SAAAnG,EAAAmG,QAAAC,MAAA,EACA,KAAA,IAAAC,OAAA,+EAGArG,GAAAsG,OAAAC,UAAAC,UAAA,SAAAC,GAMA,MALAtG,MAAAuG,oBAAAD,IACAA,EAAAA,MACAA,EAAApG,OAAAF,KACAA,KAAAuG,kBAAA,GAAA1G,GAAA2G,UAAAF,IAEAtG,KAAAuG,mBAUA1G,EAAA2G,UAAA,SAAAF,GAEAzG,EAAA4G,QAAA,EAAAzG,MAEAE,OAAA,KACAD,aAAA,EACAyG,iBAAA,EACAxF,UAAA,EAGAgD,QAAA,KACAyC,aAAA,KACAC,sBAAA,EACAC,wBAAA,EACAC,yBAAA,EACAC,wBAAA,EACAzB,iBAAA,IACAxE,KAAA,KACAK,eAAA,EACAS,cAAA,EACAG,mBAAA,GACAf,iBAAA,EACAgG,YAAA,KACAC,OAAA,KACAC,WAAA,KACAC,UAAA,KACAC,WACAf,WACAgB,KAAA,qBACAC,MAAA,2BACAC,MAAA,sBACAC,KAAA,yBAEAC,kBACAJ,KAAA,6BACAC,MAAA,mCACAC,MAAA,8BACAC,KAAA,iCAEAE,iBACAL,KAAA,4BACAC,MAAA,kCACAC,MAAA,6BACAC,KAAA,iCAGAG,aACAnE,IAAA,MACAE,KAAA,MACAzB,MAAA,MACAC,OAAA,MACA0F,OAAA,gBACAC,WAAA,OACAvD,OAAA,kBAEAwD,cACA7F,MAAA,MACAC,OAAA,MACA2F,WAAA,OACAvD,OAAA,kBAEAyD,SAAA,KACAC,YAAA,EACAC,WAAA,EAGAjG,eAAA,EACAG,gBAAA,EACAC,iBAAA,GAEAkE,GAEAzG,EAAA4G,QAAA,EAAAzG,KAAAoH,UAAApH,KAAAE,OAAAkH,WAEApH,KAAAkE,UACAlE,KAAAkE,QAAArE,EAAAqI,mBAAA,OACAlI,KAAAkE,QAAAX,MAAAsE,WAAA,qBACA7H,KAAAkE,QAAAiE,UAAA,iBAEAnI,KAAAoI,QAAApI,KAAAoI,WAGA,KAAA,GAFAC,GACAC,KACAC,EAAA,EAAAA,EAAA,EAAAA,IACAvI,KAAAoI,QAAAG,KACAvI,KAAAoI,QAAAG,GAAA1I,EAAAqI,mBAAA,OACAlI,KAAAoI,QAAAG,GAAAJ,UAAA,UAAAI,EACAvI,KAAAoI,QAAAG,GAAAhF,MAAA9C,SAAA,WACAT,KAAAoI,QAAAG,GAAAhF,MAAAtB,MAAA,MACAjC,KAAAoI,QAAAG,GAAAhF,MAAArB,OAAA,MACAlC,KAAAoI,QAAAG,GAAAhF,MAAAsE,WAAA,QAGAQ,EAAAxI,EAAAqI,mBAAA,OACAG,EAAAF,UAAA,UAAAI,EAAA,UACAF,EAAA9E,MAAA9C,SAAA,WACA4H,EAAA9E,MAAAC,IAAAxD,KAAA2H,YAAAnE,IACA6E,EAAA9E,MAAAG,KAAA1D,KAAA2H,YAAAjE,KACA2E,EAAA9E,MAAAtB,MAAAjC,KAAA2H,YAAA1F,MACAoG,EAAA9E,MAAArB,OAAAlC,KAAA2H,YAAAzF,OACAmG,EAAA9E,MAAAqE,OAAA5H,KAAA2H,YAAAC,OACAS,EAAA9E,MAAAsE,WAAA7H,KAAA2H,YAAAE,WACAQ,EAAA9E,MAAAe,OAAAtE,KAAA2H,YAAArD,OACA,GAAAzE,GAAA2I,cACAtE,QAAAlE,KAAAoI,QAAAG,GACAE,YAAApE,EAAAqE,KAAA1I,KAAAuI,GACAI,eAAA7D,EAAA4D,KAAA1I,KAAAuI,KAGAD,EAAAC,GAAA1I,EAAAqI,mBAAA,UACAI,EAAAC,GAAAJ,UAAA,UAAAI,EAAA,UACAD,EAAAC,GAAAhF,MAAA9C,SAAA,WACA6H,EAAAC,GAAAhF,MAAAtB,MAAAjC,KAAA8H,aAAA7F,MACAqG,EAAAC,GAAAhF,MAAArB,OAAAlC,KAAA8H,aAAA5F,OACAoG,EAAAC,GAAAhF,MAAAsE,WAAA7H,KAAA8H,aAAAD,WACAS,EAAAC,GAAAhF,MAAAe,OAAAtE,KAAA8H,aAAAxD,OACA,GAAAzE,GAAA2I,cACAtE,QAAAoE,EAAAC,GACAE,YAAApE,EAAAqE,KAAA1I,KAAAuI,EAAA,IACAI,eAAA7D,EAAA4D,KAAA1I,KAAAuI,KAGAvI,KAAAoI,QAAAG,GAAAK,YAAAP,GACArI,KAAAkE,QAAA0E,YAAA5I,KAAAoI,QAAAG,IAEAM,WAAA7I,KAAAkE,QAAA0E,YAAAF,KAAA1I,KAAAkE,QAAAoE,EAAAC,IAAA,EAEAvI,MAAAoI,QAAA,GAAA7E,MAAAC,IAAA,EACAxD,KAAAoI,QAAA,GAAA7E,MAAAtB,MAAA,OACAjC,KAAAoI,QAAA,GAAA7E,MAAAuF,MAAA,EACA9I,KAAAoI,QAAA,GAAA7E,MAAArB,OAAA,OACAlC,KAAAoI,QAAA,GAAA7E,MAAAwF,OAAA,EACA/I,KAAAoI,QAAA,GAAA7E,MAAAtB,MAAA,OACAjC,KAAAoI,QAAA,GAAA7E,MAAAG,KAAA,EACA1D,KAAAoI,QAAA,GAAA7E,MAAArB,OAAA,OACAoG,EAAA,GAAA/E,MAAAC,IAAA,OACA8E,EAAA,GAAA/E,MAAAG,KAAA,OACA4E,EAAA,GAAA/E,MAAAC,IAAA,OACA8E,EAAA,GAAA/E,MAAAuF,MAAA,OACAR,EAAA,GAAA/E,MAAAwF,OAAA,OACAT,EAAA,GAAA/E,MAAAuF,MAAA,OACAR,EAAA,GAAA/E,MAAAwF,OAAA,OACAT,EAAA,GAAA/E,MAAAG,KAAA,MAEA,IAAAsF,GAAAnJ,EAAAqI,mBAAA,MACAc,GAAAzF,MAAAtB,MAAA,QACA+G,EAAAzF,MAAArB,OAAA,OACA8G,EAAAzF,MAAAsE,WAAA,MACAmB,EAAAzF,MAAAQ,WAAA,oBACAiF,EAAAzF,MAAAO,UAAA,MACAkF,EAAAC,GAAA,oBAGA,IAAA/I,GAAAF,KAAAE,OACAgJ,EAAAC,SAAAC,cAAA,OACAC,EAAAF,SAAAG,eAAA,UACAJ,GAAAN,YAAAS,GAGAL,EAAAJ,YAAAM,EAIA,IAAAnJ,GAAAoJ,SAAAC,cAAA,QAEArJ,GAAAkJ,GAAA,gBACAlJ,EAAAwJ,aAAA,OAAA,QACAP,EAAAJ,YAAA7I,GAEAA,EAAAyJ,iBAAA,QAAA,WAEAtJ,EAAAqG,kBAAA7E,aAAAC,aAAA,GACAzB,EAAAqG,kBAAAkD,aAAA9H,aAAA,GACAzB,EAAAuJ,aAAAC,YAAA,EACAxJ,EAAAuJ,aAAA9H,aAAA,GACAzB,EAAAqG,kBAAAjB,iBAAA,KACAvF,EAAA4J,UACA,GACA5J,EAAAyJ,iBAAA,OAAA,WAEAtJ,EAAAqG,kBAAA7E,aAAAC,aAAA,GACAzB,EAAAqG,kBAAAkD,aAAA9H,aAAA,GACAzB,EAAAuJ,aAAAC,YAAA,EACAxJ,EAAAuJ,aAAA9H,aAAA,GACAzB,EAAAqG,kBAAAjB,iBAAAzF,EAAAyF,mBACA,GACAvF,EAAAyJ,iBAAA,UAAAxJ,KAAAkH,WAAA0C,QAGA,IAAAC,GAAAV,SAAAC,cAAA,MACAC,GAAAF,SAAAG,eAAA,WACAO,EAAAjB,YAAAS,GAGAL,EAAAJ,YAAAiB,EAEA,IAAAC,GAAAX,SAAAC,cAAA,WACAU,GAAAb,GAAA,eACAD,EAAAJ,YAAAkB,GACAA,EAAAC,KAAA,IAEAD,EAAAN,iBAAA,QAAA,WAEAtJ,EAAAqG,kBAAA7E,aAAAC,aAAA,GACAzB,EAAAqG,kBAAAkD,aAAA9H,aAAA,GACAzB,EAAAuJ,aAAAC,YAAA,EACAxJ,EAAAuJ,aAAA9H,aAAA,GACAzB,EAAAqG,kBAAAjB,iBAAA,KACAwE,EAAAH,UACA,GACAG,EAAAN,iBAAA,OAAA,WAEAtJ,EAAAqG,kBAAA7E,aAAAC,aAAA,GACAzB,EAAAqG,kBAAAkD,aAAA9H,aAAA,GACAzB,EAAAuJ,aAAAC,YAAA,EACAxJ,EAAAuJ,aAAA9H,aAAA,GACAzB,EAAAqG,kBAAAjB,iBAAAzF,EAAAyF,mBACA,GACAwE,EAAAN,iBAAA,UAAAxJ,KAAAkH,WAAA0C,QAEA,IAAAI,GAAAhK,KACAiK,EAAAd,SAAAC,cAAA,MACAa,GAAA9B,WAAA,sBACAe,EAAAgB,OAAAD,GACAf,EAAAf,WAAA,iBAGA,IAAAgC,GAAAnK,KAAAoK,WACAH,GAAArB,YAAAuB,EAGA,IAAAE,GAAAlB,SAAAC,cAAA,MACAiB,GAAAlC,WAAA,aACAkC,EAAAC,UAAA,+BACAD,EAAAE,QAAA,WACAP,EAAAQ,UAEAP,EAAArB,YAAAyB,EAGA,IAAAlF,GAAAgE,SAAAC,cAAA,MACAjE,GAAAgD,UAAA,cACAhD,EAAAmF,UAAA,MACAnF,EAAAoF,QAAA,WACAP,EAAA7E,WAGA6D,EAAAJ,YAAAzD,GAEA0D,WAAA7I,KAAAkE,QAAA0E,YAAAF,KAAA1I,KAAAkE,QAAA8E,GAAA,GAGAhJ,KAAAyK,UACAzK,KAAAyK,QAAA,GAAA5K,GAAA6K,iBAAA1K,KAAAkE,QAAAlE,KAAAc,MAAA,GAAAjB,GAAA+C,gBAGA5C,KAAAyJ,aAAA,GAAA5J,GAAA2I,cACAtE,QAAAlE,KAAAkE,QACAyG,mBAAA3K,KAAAE,OAAAyK,mBACAC,mBAAA5K,KAAAE,OAAA0K,mBACAnC,YAAA5I,EAAAgL,SAAA7K,KAAAgE,GACA2E,eAAA9I,EAAAgL,SAAA7K,KAAAmE,GAEA2G,aAAAjL,EAAAgL,SAAA7K,KAAAgD,KAMAhD,KAAA0B,aAAA,GAAA7B,GAAA2I,cACAtE,QAAAlE,KAAAE,OAAA6K,OACAJ,mBAAA3K,KAAAE,OAAAyK,mBACAC,mBAAA5K,KAAAE,OAAA0K,mBACAnC,YAAA5I,EAAAgL,SAAA7K,KAAAF,GACA6I,eAAA9I,EAAAgL,SAAA7K,KAAA8C,GACAgI,aAAAjL,EAAAgL,SAAA7K,KAAAgD,GACAgI,eAAAhL,KAAAC,cAIAD,KAAAsF,kBACAzF,EAAAoL,SACAjL,KAAAE,OAAAgL,UACA,WACArL,EAAAgL,SAAA7K,KAAA+E,IACA,EAIA,IAAAoG,GAAAnL,KAAAmH,WAAAnH,KAAAE,OAAAiH,WAAA,GACAiE,EAAApL,KAAAE,OAAAmL,SAAArL,KAAAE,OAAAmL,QAAAA,QACAC,EAAAF,EAAApL,KAAAE,OAAAmL,QAAAA,QAAA,GAAA,KACAE,EAAAD,EAAAA,EAAAE,QAAA,KACAC,EAAAH,EAAAA,EAAAI,OAAA,IAwBA,IAvBA1L,KAAA4G,uBACA5G,KAAA2G,aAAA,GAAA9G,GAAA8L,QACAzH,QAAAlE,KAAA2G,aAAA9G,EAAA+L,WAAA5L,KAAA2G,cAAA,KACAgE,mBAAA3K,KAAAE,OAAAyK,mBACAC,mBAAA5K,KAAAE,OAAA0K,mBACAiB,QAAAhM,EAAAiM,UAAA,6BAAA,mBACAC,QAAAZ,EAAAnL,KAAAoH,UAAAf,UAAAgB,KACA2E,SAAAb,EAAAnL,KAAAoH,UAAAf,UAAAiB,MACA2E,SAAAd,EAAAnL,KAAAoH,UAAAf,UAAAkB,MACA2E,QAAAf,EAAAnL,KAAAoH,UAAAf,UAAAmB,KACA2E,UAAAnM,KAAAuF,YAAAmD,KAAA1I,MACAwL,QAAAD,EACAG,OAAAD,IAEAL,IACApL,KAAAE,OAAAmL,QAAAA,QAAAe,KAAApM,KAAA2G,cACA3G,KAAAE,OAAAmL,QAAAnH,QAAA0E,YAAA5I,KAAA2G,aAAAzC,UAEAlE,KAAA2G,aAAA0F,UACArM,KAAA0G,gBAAA1G,KAAA2G,aAAA0F,QAAAC,WAAA,GACAtM,KAAA2G,aAAAzC,QAAA0E,YAAA5I,KAAA0G,mBAGA1G,KAAA6G,uBAAA,CACA7G,KAAAuM,cAAA,GAAA1M,GAAA8L,QACAzH,QAAAlE,KAAAuM,cAAA1M,EAAA+L,WAAA5L,KAAAuM,eAAA,KACA5B,mBAAA3K,KAAAE,OAAAyK,mBACAC,mBAAA5K,KAAAE,OAAA0K,mBACAiB,QAAAhM,EAAAiM,UAAA,8BAAA,oBACAC,QAAAZ,EAAAnL,KAAAoH,UAAAK,iBAAAJ,KACA2E,SAAAb,EAAAnL,KAAAoH,UAAAK,iBAAAH,MACA2E,SAAAd,EAAAnL,KAAAoH,UAAAK,iBAAAF,MACA2E,QAAAf,EAAAnL,KAAAoH,UAAAK,iBAAAD,KACA2E,UAAAnM,KAAAmF,QAAAuD,KAAA1I,MACAwL,QAAAD,EACAG,OAAAD,GAEA,IAAAtG,GAAAnF,KAAAuM,cAAArI,OACAiB,GAAAqH,UAAAC,IAAA,kBACAtH,EAAA5B,MAAAmJ,QAAA1M,KAAAgI,WAAA,GAAA,OACAhI,KAAAkE,QAAA0E,YAAAzD,GAEAnF,KAAA2M,aAAA,GAAA9M,GAAA8L,QACAzH,QAAAlE,KAAA2M,aAAA9M,EAAA+L,WAAA5L,KAAA2M,cAAA,KACAhC,mBAAA3K,KAAAE,OAAAyK,mBACAC,mBAAA5K,KAAAE,OAAA0K,mBACAiB,QAAAhM,EAAAiM,UAAA,6BAAA,mBACAC,QAAAZ,EAAAnL,KAAAoH,UAAAM,gBAAAL,KACA2E,SAAAb,EAAAnL,KAAAoH,UAAAM,gBAAAJ,MACA2E,SAAAd,EAAAnL,KAAAoH,UAAAM,gBAAAH,MACA2E,QAAAf,EAAAnL,KAAAoH,UAAAM,gBAAAF,KACA2E,UAAAnM,KAAAwK,OAAA9B,KAAA1I,MACAwL,QAAAD,EACAG,OAAAD,GAEA,IAAAjB,GAAAxK,KAAA2M,aAAAzI,OACAsG,GAAAgC,UAAAC,IAAA,iBACAjC,EAAAjH,MAAAmJ,QAAA1M,KAAAgI,WAAA,GAAA,OACAhI,KAAAkE,QAAA0E,YAAA4B,GAEAxK,KAAA8G,0BACA3B,EAAA5B,MAAA9C,SAAA,WACA0E,EAAA5B,MAAAC,IAAA,MACA2B,EAAA5B,MAAAG,KAAA,MACAyB,EAAA5B,MAAAqJ,UAAA,yBAEApC,EAAAjH,MAAA9C,SAAA,WACA+J,EAAAjH,MAAAC,IAAA,MACAgH,EAAAjH,MAAAG,KAAA,MACA8G,EAAAjH,MAAAqJ,UAAA,sBAIA5M,KAAAE,OAAA2M,WAAA,YAAA7M,KAAAgH,aAEAhH,KAAAE,OAAA2M,WAAA,OAAA7M,KAAA6C,KAAA6F,KAAA1I,OACAA,KAAAE,OAAA2M,WAAA,YAAA7M,KAAA6C,KAAA6F,KAAA1I,OACAA,KAAAE,OAAA2M,WAAA,SAAA7M,KAAA6C,KAAA6F,KAAA1I,OACAA,KAAAE,OAAA2M,WAAA,SAAA7M,KAAA6C,KAAA6F,KAAA1I,QAGAH,EAAA4G,OAAA5G,EAAA2G,UAAAJ,UAAAvG,EAAAiN,YAAA1G,WAEAb,YAAA,WACA,MAAAvF,MAAA+M,UAAA/M,KAAAC,cAGA8M,SAAA,SAAAC,GAUA,MATAhN,MAAAC,YAAA+M,EAEAhN,KAAA0B,aAAAC,YAAAqL,GACAA,EAAAhN,KAAA6C,OAAA7C,KAAAiN,SACAjN,KAAA0G,kBACA1G,KAAA0G,gBAAAnD,MAAA2J,WAAAF,EAAA,UAAA,UAEAhN,KAAAE,OAAAiN,WAAA,oBAAAH,QAAAA,IAEAhN,MAGAoN,iBAAA,SAAAjM,GACAnB,KAAAmB,cAAAA,GAGAkM,OAAA,WACA,MAAArN,MAAA+M,UAAA,IAGAO,QAAA,WACA,MAAAtN,MAAA+M,UAAA,IAGAlK,KAAA,WASA,MAPA7C,MAAAc,OACAd,KAAAyK,QAAA8C,OAAAvN,KAAAc,KAAA0M,aACAxN,KAAAyK,QAAAgD,SAAAzN,KAAAE,OAAAwN,OAAAxC,UAAAlL,KAAAE,OAAAG,WAEAL,KAAAkE,SAAAlE,KAAAkE,QAAAyJ,SAAA,KACA1K,EAAAjD,KAAAkE,QAAAlE,KAAAkE,QAAAyJ,SAAA,IAAA3N,KAAAE,OAAAG,SAAAuN,mBAAAhN,EAAAZ,KAAAE,OAAAG,SAAAuN,mBAAA/M,GAEAb,MAGAiN,OAAA,WAQA,MAPAY,QAAA7N,KAAAkE,SAAA4J,SAAAC,QAAA,GAAA/N,KAAAiI,YACAY,WAAA,SAAAQ,GACAA,EAAAoB,QAAAuD,UACAH,OAAAxE,EAAAnF,SAAA+J,IAAA,UAAA,GACA5E,EAAAvI,KAAA,KACAuI,EAAAtB,YACA/H,KAAAiI,WAAA,GAAAjI,MACAA,MAGAmF,QAAA,WACA,GAAAnF,KAAAc,KAAA,CACA,GAAAoN,GAAAlO,KAAAc,KAAA0M,WACA,IAAAxN,KAAA+G,uBAAA,CACA,GAAAoH,GAAAnO,KAAAE,OAAAG,SAAA+N,yBAAAF,EACAC,GAAAtO,EAAA+C,cAAAyL,SAAAF,GAAAG,QACAH,EAAA5M,SAAA2M,EAAA3M,SACA2M,EAAAC,EAEAnO,KAAAE,OAAAiN,WAAA,YAAAe,GACAlO,KAAAiN,SAIA,MAAAjN,OAGAwK,OAAA,WAQA,MAHAxK,MAAA0B,aAAAC,aAAA,GACA3B,KAAA0B,aAAAC,aAAA,GACA3B,KAAAE,OAAAiN,WAAA,oBAAA,GACAnN,KAAAiN,aAmWAsB,eCt0BA,SAAA1O,GACA,YAuBAA,GAAA6K,iBAAA,SAAAxG,EAAAsK,GACA3O,EAAA4O,QAAAC,MAAA1O,KAAA2O,WAGA9O,EAAA+O,cAAA1K,GACAlE,KAAAuB,SAAA2C,EAAAsK,SAAAjN,UAAA,EAEAvB,KAAAuB,SAAAiN,EAAAjN,UAAA,GAIA1B,EAAA6K,iBAAAtE,UAAAvG,EAAA4G,OAAAoI,OAAAC,OAAAjP,EAAA4O,QAAArI,YAMAqH,SAAA,WACA5N,EAAA4O,QAAArI,UAAAqH,SAAAiB,MAAA1O,KAAA2O,WACA3O,KAAAuD,MAAAqJ,UAAA5M,KAAAuD,MAAAqJ,UAAAmC,QAAA,oBAAA,IACA,WAAA/O,KAAAuB,SAAA,QAQAgM,OAAA,SAAAiB,GACA3O,EAAA4O,QAAArI,UAAAmH,OAAAmB,MAAA1O,KAAA2O,WACA3O,KAAAuB,SAAAiN,EAAAjN,UAAA,MAIAgN,eC1DA,SAAA1O,GACA,YAeAA,GAAA+C,cAAA,SAAAhC,EAAAC,EAAAoB,EAAAC,EAAAX,GACA1B,EAAA4C,KAAAiM,MAAA1O,MAAAY,EAAAC,EAAAoB,EAAAC,IAOAlC,KAAAuB,SAAAA,GAAA,GAGA1B,EAAA+C,cAAAyL,SAAA,SAAAvN,GACA,MAAA,IAAAjB,GAAA+C,cACA9B,EAAAF,EACAE,EAAAD,EACAC,EAAAmB,MACAnB,EAAAoB,SAIArC,EAAA+C,cAAAwD,UAAAvG,EAAA4G,OAAAoI,OAAAC,OAAAjP,EAAA4C,KAAA2D,YAMAnF,MAAA,WACA,MAAA,IAAApB,GAAA+C,cAAA5C,KAAAY,EAAAZ,KAAAa,EAAAb,KAAAiC,MAAAjC,KAAAkC,OAAAlC,KAAAuB,WASAyN,OAAA,SAAAC,GACA,MAAApP,GAAA4C,KAAA2D,UAAA4I,OAAAN,MAAA1O,MAAAiP,KACAjP,KAAAuB,WAAA0N,EAAA1N,UASA2N,SAAA,WACA,MAAA,IACA1N,KAAA8M,MAAA,IAAAtO,KAAAY,GAAA,IAAA,IACAY,KAAA8M,MAAA,IAAAtO,KAAAa,GAAA,IAAA,IACAW,KAAA8M,MAAA,IAAAtO,KAAAiC,OAAA,IAAA,IACAT,KAAA8M,MAAA,IAAAtO,KAAAkC,QAAA,IAAA,IACAV,KAAA8M,MAAA,IAAAtO,KAAAuB,UAAA,IACA,KAGA4N,gBAAA,WACA,GAAAC,GAAApP,KAAAiB,OAKA,OAJAmO,GAAAnN,MAAAjC,KAAAkC,OACAkN,EAAAlN,OAAAlC,KAAAiC,MACAmN,EAAAxO,IAAAZ,KAAAiC,MAAAjC,KAAAkC,QAAA,EACAkN,EAAAvO,IAAAb,KAAAkC,OAAAlC,KAAAiC,OAAA,EACAmN,GAOA5K,kBAAA,WACA,MAAAxE,MAAAuB,UAAA,IAAAC,KAAAC,KAQAJ,mBAAA,SAAAyE,GACA,GAAAuJ,GAAAvJ,EAAAjB,MAAA7E,KAAA0E,YACA,OAAAlD,MAAAmE,MAAA0J,EAAAzO,EAAAyO,EAAAxO,IAQAyN,MAAA,WACA,MAAA,IAAAzO,GAAA+C,cACApB,KAAA8M,MAAAtO,KAAAY,GACAY,KAAA8M,MAAAtO,KAAAa,GACAW,KAAA8M,MAAAtO,KAAAiC,OACAT,KAAA8M,MAAAtO,KAAAkC,QACAlC,KAAAuB,WASAiM,UAAA,WACA,GAAA8B,GAAAtP,KAAAiB,OAUA,OATAqO,GAAArN,MAAA,IACAqN,EAAA1O,GAAA0O,EAAArN,MACAqN,EAAArN,WAEAqN,EAAApN,OAAA,IACAoN,EAAAzO,GAAAyO,EAAApN,OACAoN,EAAApN,YAEAoN,EAAA/N,UAAAC,KAAAC,GACA6N,GAQA9M,OAAA,SAAA+M,GAWA,IAAA,GAVAzO,GAAAd,KAAAwN,YACAlF,GACAxH,EAAA0O,aACA1O,EAAA2O,cACA3O,EAAA4O,iBACA5O,EAAA6O,iBAEApL,EAAAzD,EAAA4D,YACAnD,EAAAT,EAAA0D,oBACAoL,EAAAL,EAAAG,iBACAnH,EAAA,EAAAA,EAAA,EAAAA,IAEA,GADAD,EAAAC,GAAAD,EAAAC,GAAA9D,OAAAlD,EAAAgD,GACA+D,EAAAC,GAAA3H,EAAA2O,EAAA3O,GAAA0H,EAAAC,GAAA3H,EAAAgP,EAAAhP,GACA0H,EAAAC,GAAA1H,EAAA0O,EAAA1O,GAAAyH,EAAAC,GAAA1H,EAAA+O,EAAA/O,EACA,OAAA,CAGA,QAAA,GAQAgP,eAAA,WACA,GAAAC,EAUA,OATA9P,MAAAuB,SAAAC,KAAAC,OACAqO,EAAA9P,KAAAmP,kBACAW,EAAAvO,UAAAC,KAAAC,GAAA,GACAzB,KAAAuB,SAAAC,KAAAC,GAAA,GACAqO,EAAA9P,KAAAmP,kBACAW,EAAAvO,UAAAC,KAAAC,GAAA,GAEAqO,EAAA9P,KAAAiB,QAEA6O,MAIAvB","file":"openseadragonselection.js","sourcesContent":["\r\n/**\r\n * Update 16/09/2019\r\n * Tắt outer tracker khi kéo thả bên ngoài \r\n * \r\n */\r\n\r\n(function($) {\r\n    'use strict';\r\n\r\n    if (!$.version || $.version.major < 2) {\r\n        throw new Error('This version of OpenSeadragonSelection requires OpenSeadragon version 2.0.0+');\r\n    }\r\n\r\n    $.Viewer.prototype.selection = function(options) {\r\n        if (!this.selectionInstance || options) {\r\n            options = options || {};\r\n            options.viewer = this;\r\n            this.selectionInstance = new $.Selection(options);\r\n        }\r\n        return this.selectionInstance;\r\n    };\r\n\r\n\r\n    /**\r\n    * @class Selection\r\n    * @classdesc Provides functionality for selecting part of an image\r\n    * @memberof OpenSeadragon\r\n    * @param {Object} options\r\n    */\r\n    $.Selection = function ( options ) {\r\n\r\n        $.extend( true, this, {\r\n            // internal state properties\r\n            viewer:                  null,\r\n            isSelecting:             false,\r\n            buttonActiveImg:         false,\r\n            rectDone:                true,\r\n\r\n            // options\r\n            element:                 null,\r\n            toggleButton:            null,\r\n            showSelectionControl:    true,\r\n            showConfirmDenyButtons:  true,\r\n            styleConfirmDenyButtons: true,\r\n            returnPixelCoordinates:  true,\r\n            keyboardShortcut:        'c',\r\n            rect:                    null,\r\n            allowRotation:           true,\r\n            startRotated:            false, // useful for rotated crops\r\n            startRotatedHeight:      0.1,\r\n            restrictToImage:         false,\r\n            onSelection:             null,\r\n            onOpen:                  null,\r\n            inputEvent:              null,\r\n            prefixUrl:               null,\r\n            navImages:               {\r\n                selection: {\r\n                    REST:   'selection_rest.png',\r\n                    GROUP:  'selection_grouphover.png',\r\n                    HOVER:  'selection_hover.png',\r\n                    DOWN:   'selection_pressed.png'\r\n                },\r\n                selectionConfirm: {\r\n                    REST:   'selection_confirm_rest.png',\r\n                    GROUP:  'selection_confirm_grouphover.png',\r\n                    HOVER:  'selection_confirm_hover.png',\r\n                    DOWN:   'selection_confirm_pressed.png'\r\n                },\r\n                selectionCancel: {\r\n                    REST:   'selection_cancel_rest.png',\r\n                    GROUP:  'selection_cancel_grouphover.png',\r\n                    HOVER:  'selection_cancel_hover.png',\r\n                    DOWN:   'selection_cancel_pressed.png'\r\n                },\r\n            },\r\n            handleStyle: {\r\n                top:        '50%',\r\n                left:       '50%',\r\n                width:      '6px',\r\n                height:     '6px',\r\n                margin:     '-4px 0 0 -4px',\r\n                background: '#000',\r\n                border:     '1px solid #ccc'\r\n            },\r\n            cornersStyle: {\r\n                width:      '6px',\r\n                height:     '6px',\r\n                background: '#000',\r\n                border:     '1px solid #ccc'\r\n            },\r\n            onCancel: null,\r\n            showButton: true,\r\n            transition: 0,\r\n\r\n            /*Self definition by hungdm */\r\n            useConstraint: false,\r\n            constraintWidth: 3,\r\n            constraintHeight: 2\r\n\r\n        }, options );\r\n\r\n        $.extend( true, this.navImages, this.viewer.navImages );\r\n\r\n        if (!this.element) {\r\n            this.element = $.makeNeutralElement('div');\r\n            this.element.style.background = 'rgba(0, 0, 0, 0.1)';\r\n            this.element.className        = 'selection-box';\r\n        }\r\n        this.borders = this.borders || [];\r\n        var handle;\r\n        var corners = [];\r\n        for (var i = 0; i < 4; i++) {\r\n            if (!this.borders[i]) {\r\n                this.borders[i]                  = $.makeNeutralElement('div');\r\n                this.borders[i].className        = 'border-' + i;\r\n                this.borders[i].style.position   = 'absolute';\r\n                this.borders[i].style.width      = '1px';\r\n                this.borders[i].style.height     = '1px';\r\n                this.borders[i].style.background = '#fff';\r\n            }\r\n\r\n            handle                  = $.makeNeutralElement('div');\r\n            handle.className        = 'border-' + i + '-handle';\r\n            handle.style.position   = 'absolute';\r\n            handle.style.top        = this.handleStyle.top;\r\n            handle.style.left       = this.handleStyle.left;\r\n            handle.style.width      = this.handleStyle.width;\r\n            handle.style.height     = this.handleStyle.height;\r\n            handle.style.margin     = this.handleStyle.margin;\r\n            handle.style.background = this.handleStyle.background;\r\n            handle.style.border     = this.handleStyle.border;\r\n            new $.MouseTracker({\r\n                element:     this.borders[i],\r\n                dragHandler: onBorderDrag.bind(this, i),\r\n                dragEndHandler: onBorderDragEnd.bind(this, i),\r\n            });\r\n\r\n            corners[i]                  = $.makeNeutralElement('canvas');\r\n            corners[i].className        = 'corner-' + i + '-handle';\r\n            corners[i].style.position   = 'absolute';\r\n            corners[i].style.width      = this.cornersStyle.width;\r\n            corners[i].style.height     = this.cornersStyle.height;\r\n            corners[i].style.background = this.cornersStyle.background;\r\n            corners[i].style.border     = this.cornersStyle.border;\r\n            new $.MouseTracker({\r\n                element:     corners[i],\r\n                dragHandler: onBorderDrag.bind(this, i + 0.5),\r\n                dragEndHandler: onBorderDragEnd.bind(this, i),\r\n            });\r\n\r\n            this.borders[i].appendChild(handle);\r\n            this.element.appendChild(this.borders[i]);\r\n            // defer corners, so they are appended last\r\n            setTimeout(this.element.appendChild.bind(this.element, corners[i]), 0);\r\n        }\r\n        this.borders[0].style.top = 0;\r\n        this.borders[0].style.width = '100%';\r\n        this.borders[1].style.right = 0;\r\n        this.borders[1].style.height = '100%';\r\n        this.borders[2].style.bottom = 0;\r\n        this.borders[2].style.width = '100%';\r\n        this.borders[3].style.left = 0;\r\n        this.borders[3].style.height = '100%';\r\n        corners[0].style.top = '-3px';\r\n        corners[0].style.left = '-3px';\r\n        corners[1].style.top = '-3px';\r\n        corners[1].style.right = '-3px';\r\n        corners[2].style.bottom = '-3px';\r\n        corners[2].style.right = '-3px';\r\n        corners[3].style.bottom = '-3px';\r\n        corners[3].style.left = '-3px';\r\n\r\n        var inputBox = $.makeNeutralElement('div');\r\n        inputBox.style.width = '200px';\r\n        inputBox.style.height = 'auto';\r\n        inputBox.style.background = 'red';\r\n        inputBox.style.marginLeft = 'calc(100% + 10px)';\r\n        inputBox.style.marginTop = '0px';\r\n        inputBox.id = 'keyImageProperties';\r\n\r\n        // Tiêu đề ô nhập key image\r\n        var viewer = this.viewer;\r\n        var d1 = document.createElement('div');\r\n        var t = document.createTextNode('Tiêu đề');\r\n        d1.appendChild(t);\r\n        //e.addClass(e, 'label');\r\n        //e.id = 'keyImageTitle';\r\n        inputBox.appendChild(d1);\r\n\r\n\r\n\r\n        var e = document.createElement('input');\r\n        \r\n        e.id = 'keyImageTitle';\r\n        e.setAttribute('type', 'text');\r\n        inputBox.appendChild(e);\r\n\r\n        e.addEventListener('click', function() {\r\n            //console.log('focued');\r\n            viewer.selectionInstance.outerTracker.setTracking(false);\r\n            viewer.selectionInstance.innerTracker.setTracking(false);\r\n            viewer.innerTracker.keyHandler = false;\r\n            viewer.innerTracker.setTracking(false);\r\n            viewer.selectionInstance.keyboardShortcut = null;\r\n            e.focus();\r\n        }, true);\r\n        e.addEventListener('blur', function() {\r\n            //console.log('unfocused');\r\n            viewer.selectionInstance.outerTracker.setTracking(true);\r\n            viewer.selectionInstance.innerTracker.setTracking(true);\r\n            viewer.innerTracker.keyHandler = true;\r\n            viewer.innerTracker.setTracking(true);\r\n            viewer.selectionInstance.keyboardShortcut = $.keyboardShortcut;\r\n        }, true);\r\n        e.addEventListener('keydown', this.inputEvent.keydown);\r\n\r\n        // Tiêu đề ô ghi chú key images\r\n        var d2 = document.createElement('div');\r\n        t = document.createTextNode('Ghi chú');\r\n        d2.appendChild(t);\r\n        //e.id = 'keyImageNote';\r\n        //e.addClass(e, 'label');\r\n        inputBox.appendChild(d2);\r\n\r\n        var f = document.createElement('textarea');\r\n        f.id = 'keyImageNote';\r\n        inputBox.appendChild(f);\r\n        f.rows = '5';\r\n\r\n        f.addEventListener('click', function() {\r\n            //console.log('focued');\r\n            viewer.selectionInstance.outerTracker.setTracking(false);\r\n            viewer.selectionInstance.innerTracker.setTracking(false);\r\n            viewer.innerTracker.keyHandler = false;\r\n            viewer.innerTracker.setTracking(false);\r\n            viewer.selectionInstance.keyboardShortcut = null;    \r\n            f.focus();        \r\n        }, true);\r\n        f.addEventListener('blur', function() {\r\n            //console.log('unfocused');\r\n            viewer.selectionInstance.outerTracker.setTracking(true);\r\n            viewer.selectionInstance.innerTracker.setTracking(true);\r\n            viewer.innerTracker.keyHandler = true;\r\n            viewer.innerTracker.setTracking(true);\r\n            viewer.selectionInstance.keyboardShortcut = $.keyboardShortcut;\r\n        }, true);\r\n        f.addEventListener('keydown', this.inputEvent.keydown);\r\n\r\n        var $this = this;\r\n        var btnGroup = document.createElement('div');\r\n        btnGroup.className += 'selection-btn-group';\r\n        d1.append(btnGroup);\r\n        d1.className += 'selection-title';\r\n\r\n        // nút config\r\n        var config = this.configBtn();\r\n        btnGroup.appendChild(config);\r\n\r\n        // nút hủy\r\n        var close = document.createElement('div');\r\n        close.className += 'btn-cancel';\r\n        close.innerHTML = '<i class=\"fas fa-times\"></i>';\r\n        close.onclick = function() {\r\n            $this.cancel();\r\n        };\r\n        btnGroup.appendChild(close);\r\n\r\n        // nút confirm\r\n        var confirm = document.createElement('div');\r\n        confirm.className = 'btn-confirm';\r\n        confirm.innerHTML = 'Lưu';\r\n        confirm.onclick = function() {\r\n            $this.confirm();\r\n        };\r\n\r\n        inputBox.appendChild(confirm);\r\n\r\n        setTimeout(this.element.appendChild.bind(this.element, inputBox), 0);\r\n        //setTimeout(this.element.appendChild.bind(this.element, titleField), 0);\r\n\r\n        if (!this.overlay) {\r\n            this.overlay = new $.SelectionOverlay(this.element, this.rect || new $.SelectionRect());\r\n        }\r\n\r\n        this.innerTracker = new $.MouseTracker({\r\n            element:            this.element,\r\n            clickTimeThreshold: this.viewer.clickTimeThreshold,\r\n            clickDistThreshold: this.viewer.clickDistThreshold,\r\n            dragHandler:        $.delegate( this, onInsideDrag ),\r\n            dragEndHandler:     $.delegate( this, onInsideDragEnd ),\r\n            // keyHandler:         $.delegate( this, onKeyPress ),\r\n            clickHandler:       $.delegate( this, onClick ),\r\n            // scrollHandler:      $.delegate( this.viewer, this.viewer.innerTracker.scrollHandler ),\r\n            // pinchHandler:       $.delegate( this.viewer, this.viewer.innerTracker.pinchHandler ),\r\n        });\r\n\r\n        \r\n        this.outerTracker = new $.MouseTracker({\r\n            element:            this.viewer.canvas,\r\n            clickTimeThreshold: this.viewer.clickTimeThreshold,\r\n            clickDistThreshold: this.viewer.clickDistThreshold,\r\n            dragHandler:        $.delegate( this, onOutsideDrag ),\r\n            dragEndHandler:     $.delegate( this, onOutsideDragEnd ),\r\n            clickHandler:       $.delegate( this, onClick ),\r\n            startDisabled:      !this.isSelecting,\r\n        });\r\n        \r\n\r\n        if (this.keyboardShortcut) {\r\n            $.addEvent(\r\n                this.viewer.container,\r\n                'keypress',\r\n                $.delegate(this, onKeyPress),\r\n                false\r\n            );\r\n        }\r\n\r\n        var prefix = this.prefixUrl || this.viewer.prefixUrl || '';\r\n        var useGroup = this.viewer.buttons && this.viewer.buttons.buttons;\r\n        var anyButton = useGroup ? this.viewer.buttons.buttons[0] : null;\r\n        var onFocusHandler = anyButton ? anyButton.onFocus : null;\r\n        var onBlurHandler = anyButton ? anyButton.onBlur : null;\r\n        if (this.showSelectionControl) {\r\n            this.toggleButton = new $.Button({\r\n                element:    this.toggleButton ? $.getElement( this.toggleButton ) : null,\r\n                clickTimeThreshold: this.viewer.clickTimeThreshold,\r\n                clickDistThreshold: this.viewer.clickDistThreshold,\r\n                tooltip:    $.getString('Tooltips.SelectionToggle') || 'Toggle selection',\r\n                srcRest:    prefix + this.navImages.selection.REST,\r\n                srcGroup:   prefix + this.navImages.selection.GROUP,\r\n                srcHover:   prefix + this.navImages.selection.HOVER,\r\n                srcDown:    prefix + this.navImages.selection.DOWN,\r\n                onRelease:  this.toggleState.bind( this ),\r\n                onFocus:    onFocusHandler,\r\n                onBlur:     onBlurHandler\r\n            });\r\n            if (useGroup) {\r\n                this.viewer.buttons.buttons.push(this.toggleButton);\r\n                this.viewer.buttons.element.appendChild(this.toggleButton.element);\r\n            }\r\n            if (this.toggleButton.imgDown) {\r\n                this.buttonActiveImg = this.toggleButton.imgDown.cloneNode(true);\r\n                this.toggleButton.element.appendChild(this.buttonActiveImg);\r\n            }\r\n        }\r\n        if (this.showConfirmDenyButtons) {\r\n            this.confirmButton = new $.Button({\r\n                element:    this.confirmButton ? $.getElement( this.confirmButton ) : null,\r\n                clickTimeThreshold: this.viewer.clickTimeThreshold,\r\n                clickDistThreshold: this.viewer.clickDistThreshold,\r\n                tooltip:    $.getString('Tooltips.SelectionConfirm') || 'Confirm selection',\r\n                srcRest:    prefix + this.navImages.selectionConfirm.REST,\r\n                srcGroup:   prefix + this.navImages.selectionConfirm.GROUP,\r\n                srcHover:   prefix + this.navImages.selectionConfirm.HOVER,\r\n                srcDown:    prefix + this.navImages.selectionConfirm.DOWN,\r\n                onRelease:  this.confirm.bind( this ),\r\n                onFocus:    onFocusHandler,\r\n                onBlur:     onBlurHandler\r\n            });\r\n            var confirm = this.confirmButton.element;\r\n            confirm.classList.add('confirm-button');\r\n            confirm.style.display = this.showButton ? '' : 'none';\r\n            this.element.appendChild(confirm);\r\n\r\n            this.cancelButton = new $.Button({\r\n                element:    this.cancelButton ? $.getElement( this.cancelButton ) : null,\r\n                clickTimeThreshold: this.viewer.clickTimeThreshold,\r\n                clickDistThreshold: this.viewer.clickDistThreshold,\r\n                tooltip:    $.getString('Tooltips.SelectionCancel') || 'Cancel selection',\r\n                srcRest:    prefix + this.navImages.selectionCancel.REST,\r\n                srcGroup:   prefix + this.navImages.selectionCancel.GROUP,\r\n                srcHover:   prefix + this.navImages.selectionCancel.HOVER,\r\n                srcDown:    prefix + this.navImages.selectionCancel.DOWN,\r\n                onRelease:  this.cancel.bind( this ),\r\n                onFocus:    onFocusHandler,\r\n                onBlur:     onBlurHandler\r\n            });\r\n            var cancel = this.cancelButton.element;\r\n            cancel.classList.add('cancel-button');\r\n            cancel.style.display = this.showButton ? '' : 'none';\r\n            this.element.appendChild(cancel);\r\n\r\n            if (this.styleConfirmDenyButtons) {\r\n                confirm.style.position = 'absolute';\r\n                confirm.style.top = '50%';\r\n                confirm.style.left = '50%';\r\n                confirm.style.transform = 'translate(-100%, -50%)';\r\n\r\n                cancel.style.position = 'absolute';\r\n                cancel.style.top = '50%';\r\n                cancel.style.left = '50%';\r\n                cancel.style.transform = 'translate(0, -50%)';\r\n            }\r\n        }\r\n\r\n        this.viewer.addHandler('selection', this.onSelection);\r\n\r\n        this.viewer.addHandler('open', this.draw.bind(this));\r\n        this.viewer.addHandler('animation', this.draw.bind(this));\r\n        this.viewer.addHandler('resize', this.draw.bind(this));\r\n        this.viewer.addHandler('rotate', this.draw.bind(this));\r\n    };\r\n\r\n    $.extend( $.Selection.prototype, $.ControlDock.prototype, /** @lends OpenSeadragon.Selection.prototype */{\r\n\r\n        toggleState: function() {\r\n            return this.setState(!this.isSelecting);\r\n        },\r\n\r\n        setState: function(enabled) {\r\n            this.isSelecting = enabled;\r\n            // this.viewer.innerTracker.setTracking(!enabled);\r\n            this.outerTracker.setTracking(enabled);\r\n            enabled ? this.draw() : this.undraw();\r\n            if (this.buttonActiveImg) {\r\n                this.buttonActiveImg.style.visibility = enabled ? 'visible' : 'hidden';\r\n            }\r\n            this.viewer.raiseEvent('selection_toggle', {enabled: enabled});\r\n\r\n            return this;\r\n        },\r\n\r\n        setAllowRotation: function(allowRotation) {\r\n            this.allowRotation = allowRotation;\r\n        },\r\n\r\n        enable: function() {\r\n            return this.setState(true);\r\n        },\r\n\r\n        disable: function() {\r\n            return this.setState(false);\r\n        },\r\n\r\n        draw: function() {\r\n            //alert('vẽ nè');\r\n            if (this.rect) {\r\n                this.overlay.update(this.rect.normalize());\r\n                this.overlay.drawHTML(this.viewer.drawer.container, this.viewer.viewport);\r\n            }\r\n            if (this.element && this.element.children[10]) {\r\n                restrictInputBox(this.element, this.element.children[10], this.viewer.viewport.getContainerSize().x, this.viewer.viewport.getContainerSize().y);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        undraw: function() {\r\n            jQuery(this.element).animate({opacity: 0/*, width: 0, height: 0*/}, this.transition);\r\n            setTimeout(function(t) {\r\n                t.overlay.destroy();\r\n                jQuery(t.element).css('opacity', 1);\r\n                t.rect = null;\r\n                t.onCancel();\r\n            }, this.transition + 10, this);\r\n            return this;\r\n        },\r\n\r\n        confirm: function() {\r\n            if (this.rect) {\r\n                var result = this.rect.normalize();\r\n                if (this.returnPixelCoordinates) {\r\n                    var real = this.viewer.viewport.viewportToImageRectangle(result);\r\n                    real = $.SelectionRect.fromRect(real).round();\r\n                    real.rotation = result.rotation;\r\n                    result = real;\r\n                }\r\n                this.viewer.raiseEvent('selection', result);\r\n                this.undraw();\r\n            }\r\n            //document.getElementById(\"keyImageNote\") = \"\";\r\n            //document.getElementById(\"keyImageTitle\") = \"\";\r\n            return this;\r\n        },\r\n\r\n        cancel: function() {\r\n            /*\r\n             * These two lines have been added to fix a issue with mobile where the selection is just a pinpoint after the first drag\r\n             * For some reason disabling then re-enabling the tracking fixes this issue.\r\n             */\r\n            this.outerTracker.setTracking(false);\r\n            this.outerTracker.setTracking(true);\r\n            this.viewer.raiseEvent('selection_cancel', false);\r\n            return this.undraw();\r\n        },\r\n    });\r\n\r\n    function onOutsideDrag(e) {\r\n        // Disable move when makeing new selection\r\n        if (!this.isSelecting) return;\r\n        this.viewer.setMouseNavEnabled(false);\r\n        var delta = this.viewer.viewport.deltaPointsFromPixels(e.delta, true);\r\n        var end = this.viewer.viewport.pointFromPixel(e.position, true);\r\n        var start = new $.Point(end.x - delta.x, end.y - delta.y);\r\n        if (!this.rect) {\r\n            if (this.restrictToImage) {\r\n                if (!pointIsInImage(this, start)) {\r\n                    return;\r\n                }\r\n                restrictVector(delta, end);\r\n            }\r\n            if (this.startRotated) {\r\n                this.rotatedStartPoint = start;\r\n                this.rect = getPrerotatedRect(start, end, this.startRotatedHeight);\r\n            } else {\r\n                if (!this.useConstraint) {\r\n                    this.rect = new $.SelectionRect(start.x, start.y, delta.x, delta.y);\r\n                } else {\r\n                    this.rect = new $.SelectionRect(start.x, start.y, delta.x, delta.y);\r\n                }\r\n            }\r\n            this.rectDone = false;\r\n        } else {\r\n            \r\n            var oldRect;\r\n            if (this.restrictToImage) {\r\n                oldRect = this.rect.clone();\r\n            }\r\n            if (this.rectDone) {\r\n                // All rotation as needed.\r\n                if (this.allowRotation) {\r\n                    var angle1 = this.rect.getAngleFromCenter(start);\r\n                    var angle2 = this.rect.getAngleFromCenter(end);\r\n                    this.rect.rotation = (this.rect.rotation + angle1 - angle2) % Math.PI;\r\n                } else {\r\n                    this.outerTracker.setTracking(false);\r\n                }\r\n            } else {\r\n                if (this.startRotated) {\r\n                    this.rect = getPrerotatedRect(this.rotatedStartPoint, end, this.startRotatedHeight);\r\n                } else {\r\n                    if (!this.useConstraint) {\r\n                        this.rect.width += delta.x;\r\n                        this.rect.height += delta.y;    \r\n                    }\r\n                    else {\r\n                        this.rect.width += delta.x;\r\n                        this.rect.height = this.rect.width / this.constraintWidth * this.constraintHeight;\r\n                    }\r\n                }\r\n            }\r\n            var bounds = this.viewer.world.getHomeBounds();\r\n            if (this.restrictToImage && !this.rect.fitsIn(new $.Rect(0, 0, bounds.width, bounds.height))) {\r\n                this.rect = oldRect;\r\n            }\r\n        }\r\n        this.draw();\r\n        \r\n    }\r\n\r\n    function onOutsideDragEnd() {\r\n        \r\n        // Resizing a selection will function\r\n        // when drawn any direction\r\n        if (this.rect) {\r\n            if (this.rect.width < 0){\r\n                this.rect.x += this.rect.width;\r\n                this.rect.width = Math.abs(this.rect.width);\r\n            }\r\n            if (this.rect.height < 0){\r\n                this.rect.y += this.rect.height;\r\n                this.rect.height = Math.abs(this.rect.height);\r\n            }\r\n        }\r\n        \r\n        // Eable move after new selection is done\r\n        this.viewer.setMouseNavEnabled(true);\r\n        this.rectDone = true;\r\n        \r\n    }\r\n\r\n    function onClick() {\r\n        //this.viewer.canvas.focus();\r\n    }\r\n\r\n    function restrictInputBox(rect, box, maxX, maxY) {\r\n        var rectTop = parseInt(rect.style.top);\r\n        var rectLeft = parseInt(rect.style.left);\r\n        var rectWidth = parseInt(rect.style.width);\r\n        var rectHeight = parseInt(rect.style.height);\r\n\r\n        //var boxTop = parseInt(box.style.top);\r\n        //var boxLeft = parseInt(box.style.left);\r\n        var boxWidth = parseInt(box.style.width);\r\n        var boxHeight = parseInt(box.style.height);\r\n\r\n        //console.log(boxWidth);\r\n\r\n        // Selection box tràn lên cạnh trên\r\n        if (rectTop < 0) {\r\n            box.style.marginTop = -rectTop + 'px';\r\n        } else if (rectTop + boxHeight >= maxY) {\r\n            //box.style.bottom = '0px';\r\n            box.style.marginTop = maxY - (rectTop + boxHeight) + 'px';\r\n        }\r\n\r\n        if (rectLeft + rectWidth + boxWidth + 10 >= maxX) {\r\n            //box.style.left = '';\r\n            //box.style.right = rectWidth + 10 + 'px';\r\n            box.style.marginLeft = -boxWidth - 10 + 'px';\r\n        } else {\r\n            box.style.marginLeft = 'calc(100% + 10px)';\r\n            //box.style.right = '';\r\n        } \r\n        //inputBox.style.background = 'blue';\r\n\r\n    }\r\n\r\n    function onInsideDrag(e) {\r\n        $.addClass(this.element, 'dragging');\r\n        var delta = this.viewer.viewport.deltaPointsFromPixels(e.delta, true);\r\n        this.rect.x += delta.x;\r\n        this.rect.y += delta.y;\r\n        var bounds = this.viewer.world.getHomeBounds();\r\n        if (this.restrictToImage && !this.rect.fitsIn(new $.Rect(0, 0, bounds.width, bounds.height))) {\r\n            this.rect.x -= delta.x;\r\n            this.rect.y -= delta.y;\r\n        }\r\n        \r\n        \r\n        this.draw();\r\n        //console.log(this.element.inputBox);\r\n        //console.log(this);\r\n    }\r\n\r\n    function onInsideDragEnd() {\r\n        $.removeClass(this.element, 'dragging');\r\n    }\r\n\r\n    function onBorderDrag(border, e) {\r\n        //console.log('a');\r\n        var delta = e.delta;\r\n        var rotation = this.rect.getDegreeRotation();\r\n        var center;\r\n        var oldRect = this.restrictToImage ? this.rect.clone() : null;\r\n        if (rotation !== 0) {\r\n            // adjust vector\r\n            delta = delta.rotate(-1 * rotation, new $.Point(0, 0));\r\n            center = this.rect.getCenter();\r\n        }\r\n        delta = this.viewer.viewport.deltaPointsFromPixels(delta, true);\r\n        switch (border) {\r\n            case 0:\r\n                if (!this.useConstraint) {\r\n                    this.rect.y += delta.y;\r\n                    this.rect.height -= delta.y;\r\n                    break;\r\n                }\r\n                else {\r\n                    this.rect.y += delta.y;\r\n                    this.rect.height -= delta.y;\r\n\r\n                    var end = this.rect.x + this.rect.width;\r\n                    this.rect.width = this.rect.height / this.constraintHeight * this.constraintWidth;\r\n                    this.rect.x = end - this.rect.width;\r\n                    break; \r\n                }\r\n            case 1:\r\n                if (!this.useConstraint) {\r\n                    this.rect.width += delta.x;\r\n                    break;\r\n                }\r\n                else {\r\n                    this.rect.width += delta.x;\r\n\r\n                    this.rect.height = this.rect.width / this.constraintWidth * this.constraintHeight;\r\n                    break; \r\n                }\r\n            case 2:\r\n                if (!this.useConstraint) {\r\n                    this.rect.height += delta.y;\r\n                    break;\r\n                }\r\n                else {\r\n                    this.rect.height += delta.y;\r\n                    this.rect.width = this.rect.height / this.constraintHeight * this.constraintWidth;\r\n                    break; \r\n                }\r\n            case 3:\r\n                if (!this.useConstraint) {\r\n                    this.rect.x += delta.x;\r\n                    this.rect.width -= delta.x;\r\n                    break;\r\n                }\r\n                else {\r\n                    this.rect.x += delta.x;\r\n                    this.rect.width -= delta.x;\r\n\r\n                    var end = this.rect.y + this.rect.height;\r\n                    this.rect.height = this.rect.width / this.constraintWidth * this.constraintHeight;\r\n                    this.rect.y = end - this.rect.height;\r\n                    break; \r\n                }\r\n            case 0.5:\r\n                if (!this.useConstraint) {\r\n                    this.rect.y += delta.y;\r\n                    this.rect.height -= delta.y;\r\n                    this.rect.x += delta.x;\r\n                    this.rect.width -= delta.x;\r\n                    break;\r\n                } else {\r\n                    this.rect.y += delta.y;\r\n                    this.rect.height -= delta.y;\r\n\r\n                    var end = this.rect.x + this.rect.width;\r\n                    this.rect.width = this.rect.height / this.constraintHeight * this.constraintWidth;\r\n                    this.rect.x = end - this.rect.width;\r\n                    break; \r\n                }\r\n            case 1.5:\r\n                if (!this.useConstraint) {\r\n                    this.rect.y += delta.y;\r\n                    this.rect.height -= delta.y;\r\n                    this.rect.width += delta.x;\r\n                    break;\r\n                } else {\r\n                    this.rect.y += delta.y;\r\n                    this.rect.height -= delta.y;\r\n\r\n                    this.rect.width = this.rect.height / this.constraintHeight * this.constraintWidth;\r\n                    //alert(1.5);\r\n                    break;\r\n                }\r\n            case 2.5:\r\n                if (!this.useConstraint) {\r\n                    this.rect.width += delta.x;\r\n                    this.rect.height += delta.y;\r\n                    break;\r\n                } else {\r\n                    // console.log(delta.y);\r\n                    this.rect.height += delta.y;\r\n                    this.rect.width = this.rect.height / this.constraintHeight * this.constraintWidth;\r\n                    //alert(2.5);\r\n                    break;\r\n                }\r\n            case 3.5:\r\n                if (!this.useConstraint) {\r\n                    this.rect.height += delta.y;\r\n                    this.rect.x += delta.x;\r\n                    this.rect.width -= delta.x;\r\n                    break;\r\n                } else {\r\n                    this.rect.height += delta.y;\r\n\r\n                    var end = this.rect.x + this.rect.width;\r\n                    this.rect.width = this.rect.height / this.constraintHeight * this.constraintWidth;\r\n                    this.rect.x = end - this.rect.width;\r\n                    break;\r\n                }\r\n        }\r\n        if (rotation !== 0) {\r\n            // calc center deviation\r\n            var newCenter = this.rect.getCenter();\r\n            // rotate new center around old\r\n            var target = newCenter.rotate(rotation, center);\r\n            // adjust new center\r\n            delta = target.minus(newCenter);\r\n            this.rect.x += delta.x;\r\n            this.rect.y += delta.y;\r\n        }\r\n        var bounds = this.viewer.world.getHomeBounds();\r\n        if (this.restrictToImage && !this.rect.fitsIn(new $.Rect(0, 0, bounds.width, bounds.height))) {\r\n            this.rect = oldRect;\r\n        }\r\n        this.draw();\r\n    }\r\n    \r\n    // After you have completed dragging, ensure the top left of the selection\r\n    // box is still the top left corner of the box\r\n    function onBorderDragEnd(){\r\n        if (this.rect.width < 0){\r\n            this.rect.x += this.rect.width;\r\n            this.rect.width = Math.abs(this.rect.width);\r\n        }\r\n        if (this.rect.height < 0){\r\n            this.rect.y += this.rect.height;\r\n            this.rect.height = Math.abs(this.rect.height);\r\n        }\r\n    }\r\n\r\n    function onKeyPress(e) {\r\n        var key = e.keyCode ? e.keyCode : e.charCode;\r\n        if (key === 13) {\r\n            this.confirm();\r\n        } else if (String.fromCharCode(key) === this.keyboardShortcut) {\r\n            this.toggleState();\r\n        }\r\n    }\r\n\r\n    function getPrerotatedRect(start, end, height) {\r\n        if (start.x > end.x) {\r\n            // always draw left to right\r\n            var x = start;\r\n            start = end;\r\n            end = x;\r\n        }\r\n        var delta = end.minus(start);\r\n        var dist = start.distanceTo(end);\r\n        var angle = -1 * Math.atan2(delta.x, delta.y) + (Math.PI / 2);\r\n        var center = new $.Point(\r\n            delta.x / 2 + start.x,\r\n            delta.y / 2 + start.y\r\n        );\r\n        var rect = new $.SelectionRect(\r\n            center.x - (dist / 2),\r\n            center.y - (height / 2),\r\n            dist,\r\n            height,\r\n            angle\r\n        );\r\n        var heightModDelta = new $.Point(0, height);\r\n        heightModDelta = heightModDelta.rotate(rect.getDegreeRotation(), new $.Point(0, 0));\r\n        rect.x += heightModDelta.x / 2;\r\n        rect.y += heightModDelta.y / 2;\r\n        return rect;\r\n    }\r\n\r\n    function pointIsInImage(self, point) {\r\n        var bounds = self.viewer.world.getHomeBounds();\r\n        return point.x >= 0 && point.x <= bounds.width && point.y >= 0 && point.y <= bounds.height;\r\n    }\r\n\r\n    function restrictVector(delta, end) {\r\n        var start;\r\n        for (var prop in {x: 0, y: 0}) {\r\n            start = end[prop] - delta[prop];\r\n            if (start < 1 && start > 0) {\r\n                if (end[prop] > 1) {\r\n                    delta[prop] -= end[prop] - 1;\r\n                    end[prop] = 1;\r\n                } else if (end[prop] < 0) {\r\n                    delta[prop] -= end[prop];\r\n                    end[prop] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n})(OpenSeadragon);\r\n","(function( $ ){\r\n    'use strict';\r\n\r\n    /**\r\n     * @class Overlay\r\n     * @classdesc Provides a way to float an HTML element on top of the viewer element.\r\n     *\r\n     * @memberof OpenSeadragon\r\n     * @param {Object} options\r\n     * @param {Element} options.element\r\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect|OpenSeadragon.SelectionRect} options.location - The\r\n     * location of the overlay on the image. If a {@link OpenSeadragon.Point}\r\n     * is specified, the overlay will keep a constant size independently of the\r\n     * zoom. If a {@link OpenSeadragon.Rect} is specified, the overlay size will\r\n     * be adjusted when the zoom changes.\r\n     * @param {OpenSeadragon.OverlayPlacement} [options.placement=OpenSeadragon.OverlayPlacement.TOP_LEFT]\r\n     * Relative position to the viewport.\r\n     * Only used if location is a {@link OpenSeadragon.Point}.\r\n     * @param {OpenSeadragon.Overlay.OnDrawCallback} [options.onDraw]\r\n     * @param {Boolean} [options.checkResize=true] Set to false to avoid to\r\n     * check the size of the overlay everytime it is drawn when using a\r\n     * {@link OpenSeadragon.Point} as options.location. It will improve\r\n     * performances but will cause a misalignment if the overlay size changes.\r\n     */\r\n    $.SelectionOverlay = function( element, location) {\r\n        $.Overlay.apply( this, arguments );\r\n\r\n        // set the rotation in radians\r\n        if ( $.isPlainObject( element ) ) {\r\n            this.rotation = element.location.rotation || 0;\r\n        } else {\r\n            this.rotation = location.rotation || 0;\r\n        }\r\n    };\r\n\r\n    $.SelectionOverlay.prototype = $.extend( Object.create($.Overlay.prototype), {\r\n\r\n        /**\r\n         * @function\r\n         * @param {Element} container\r\n         */\r\n        drawHTML: function() {\r\n            $.Overlay.prototype.drawHTML.apply( this, arguments );\r\n            this.style.transform = this.style.transform.replace(/ ?rotate\\(.+rad\\)/, '') +\r\n                ' rotate(' + this.rotation + 'rad)';\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location\r\n         * @param {OpenSeadragon.OverlayPlacement} position\r\n         */\r\n        update: function( location ) {\r\n            $.Overlay.prototype.update.apply( this, arguments );\r\n            this.rotation = location.rotation || 0;\r\n        }\r\n    });\r\n\r\n}( OpenSeadragon ));\r\n","(function( $ ){\r\n    'use strict';\r\n\r\n    /**\r\n     * @class SelectionRect\r\n     * @classdesc A display rectangle is very similar to {@link OpenSeadragon.Rect} but adds rotation\r\n     * around the center point\r\n     *\r\n     * @memberof OpenSeadragon\r\n     * @extends OpenSeadragon.Rect\r\n     * @param {Number} x The vector component 'x'.\r\n     * @param {Number} y The vector component 'y'.\r\n     * @param {Number} width The vector component 'height'.\r\n     * @param {Number} height The vector component 'width'.\r\n     * @param {Number} rotation The rotation in radians\r\n     */\r\n    $.SelectionRect = function( x, y, width, height, rotation ) {\r\n        $.Rect.apply( this, [ x, y, width, height ] );\r\n\r\n        /**\r\n         * The rotation in radians\r\n         * @member {Number} rotation\r\n         * @memberof OpenSeadragon.SelectionRect#\r\n         */\r\n        this.rotation = rotation || 0;\r\n    };\r\n\r\n    $.SelectionRect.fromRect = function(rect) {\r\n        return new $.SelectionRect(\r\n            rect.x,\r\n            rect.y,\r\n            rect.width,\r\n            rect.height\r\n        );\r\n    };\r\n\r\n    $.SelectionRect.prototype = $.extend( Object.create($.Rect.prototype), {\r\n\r\n        /**\r\n         * @function\r\n         * @returns {OpenSeadragon.Rect} a duplicate of this Rect\r\n         */\r\n        clone: function() {\r\n            return new $.SelectionRect(this.x, this.y, this.width, this.height, this.rotation);\r\n        },\r\n\r\n        /**\r\n         * Determines if two Rectangles have equivalent components.\r\n         * @function\r\n         * @param {OpenSeadragon.Rect} rectangle The Rectangle to compare to.\r\n         * @return {Boolean} 'true' if all components are equal, otherwise 'false'.\r\n         */\r\n        equals: function( other ) {\r\n            return $.Rect.prototype.equals.apply(this, [ other ]) &&\r\n                ( this.rotation === other.rotation );\r\n        },\r\n\r\n        /**\r\n         * Provides a string representation of the rectangle which is useful for\r\n         * debugging.\r\n         * @function\r\n         * @returns {String} A string representation of the rectangle.\r\n         */\r\n        toString: function() {\r\n            return '[' +\r\n                (Math.round(this.x*100) / 100) + ',' +\r\n                (Math.round(this.y*100) / 100) + ',' +\r\n                (Math.round(this.width*100) / 100) + 'x' +\r\n                (Math.round(this.height*100) / 100) + '@' +\r\n                (Math.round(this.rotation*100) / 100) +\r\n            ']';\r\n        },\r\n\r\n        swapWidthHeight: function() {\r\n            var swapped = this.clone();\r\n            swapped.width = this.height;\r\n            swapped.height = this.width;\r\n            swapped.x += (this.width - this.height) / 2;\r\n            swapped.y += (this.height - this.width) / 2;\r\n            return swapped;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @returns {Number} The rotaion in degrees\r\n         */\r\n        getDegreeRotation: function() {\r\n            return this.rotation * (180/Math.PI);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @param {OpenSeadragon.Point} point\r\n         * @returns {Number} The angle in radians\r\n         */\r\n        getAngleFromCenter: function(point) {\r\n            var diff = point.minus(this.getCenter());\r\n            return Math.atan2(diff.x, diff.y);\r\n        },\r\n\r\n        /**\r\n         * Rounds pixel coordinates\r\n         * @function\r\n         * @returns {SelectionRect} The altered rect\r\n         */\r\n        round: function() {\r\n            return new $.SelectionRect(\r\n                Math.round(this.x),\r\n                Math.round(this.y),\r\n                Math.round(this.width),\r\n                Math.round(this.height),\r\n                this.rotation\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Fixes negative width/height, rotation larger than PI\r\n         * @function\r\n         * @returns {SelectionRect} The normalized rect\r\n         */\r\n        normalize: function() {\r\n            var fixed = this.clone();\r\n            if (fixed.width < 0) {\r\n                fixed.x += fixed.width;\r\n                fixed.width *= -1;\r\n            }\r\n            if (fixed.height < 0) {\r\n                fixed.y += fixed.height;\r\n                fixed.height *= -1;\r\n            }\r\n            fixed.rotation %= Math.PI;\r\n            return fixed;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @param {OpenSeadragon.Rect} area\r\n         * @returns {Boolean} Does this rect fit in a specified area\r\n         */\r\n        fitsIn: function(area) {\r\n            var rect = this.normalize();\r\n            var corners = [\r\n                rect.getTopLeft(),\r\n                rect.getTopRight(),\r\n                rect.getBottomRight(),\r\n                rect.getBottomLeft(),\r\n            ];\r\n            var center = rect.getCenter();\r\n            var rotation = rect.getDegreeRotation();\r\n            var areaEnd = area.getBottomRight();\r\n            for (var i = 0; i < 4; i++) {\r\n                corners[i] = corners[i].rotate(rotation, center);\r\n                if (corners[i].x < area.x || corners[i].x > areaEnd.x ||\r\n                    corners[i].y < area.y || corners[i].y > areaEnd.y) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reduces rotation to within [-45, 45] degrees by swapping width & height\r\n         * @function\r\n         * @returns {SelectionRect} The altered rect\r\n         */\r\n        reduceRotation: function() {\r\n            var reduced;\r\n            if (this.rotation < Math.PI / (-4)) {\r\n                reduced = this.swapWidthHeight();\r\n                reduced.rotation += Math.PI / 2;\r\n            } else if (this.rotation > Math.PI / 4) {\r\n                reduced = this.swapWidthHeight();\r\n                reduced.rotation -= Math.PI / 2;\r\n            } else {\r\n                reduced = this.clone();\r\n            }\r\n            return reduced;\r\n        },\r\n    });\r\n\r\n}( OpenSeadragon ));\r\n"]}